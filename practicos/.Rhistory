list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
vector <- makeVector(1:10)
vector$get()
vector$set(1:5)
vector$get()
cachemean(vector)
cachemean(vector)
duration = faithful$eruptions
breaks = seq(1.5, 5.5, by=0.5)
duration.cut = cut(duration, breaks, right=FALSE)
duration.freq = table(duration.cut)
duration
cumfreq0 = c(0, cumsum(duration.freq))
?cumsum
breaks
?cut
cumfreq0 = c(0, cumsum(duration.freq))
> plot(breaks, cumfreq0,            # plot the data
+   main="Old Faithful Eruptions",  # main title
+   xlab="Duration minutes",        # x−axis label
+   ylab="Cumulative eruptions")   # y−axis label
plot(breaks, cumfreq0,            # plot the data
+   main="Old Faithful Eruptions",  # main title
+   xlab="Duration minutes",        # x−axis label
+   ylab="Cumulative eruptions")   # y−axis label
lines(breaks, cumfreq0)           # join the points
duration = faithful$eruptions
breaks = seq(1.5, 5.5, by=0.5)
duration.cut = cut(duration, breaks, right=FALSE)
duration.freq = table(duration.cut)
cumfreq0 = c(0, cumsum(duration.freq))
cumfreq0 = c(0, cumsum(duration.freq))
plot(breaks, cumfreq0,            # plot the data
+   main="Old Faithful Eruptions",  # main title
+   xlab="Duration minutes",        # x−axis label
+   ylab="Cumulative eruptions")   # y−axis label
plot(breaks, cumfreq0,            # plot the data
main="Old Faithful Eruptions",  # main title
xlab="Duration minutes",        # x−axis label
ylab="Cumulative eruptions")   # y−axis label
lines(breaks, cumfreq0)           # join the points
swirl()
library(swirl)
swirl()
swirl()
.997*.001
.015*.999
.997*.001/(.997*.001 + .015*.999)
3.5
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
runif(100)
sd(runif(100))
1/12
var(runif(100))
sd(runif(100))^2
sd(runif(100))^2
sd(runif(100))^2
sd(runif(100))^2
sd(runif(1000))^2
sd(runif(1000))^2
sd(runif(1000))^2
sd(runif(1000))^2
sd(runif(1000))^2
1/12
?rpois
hist(rpois(1000))
rpois(1000)
p <- seq(0, 1, length = 1000)
y <- p * (1 - p)
p
plot(p, y, type = "l", lwd = 3, frame = FALSE)
nosim <- 1000
n <- 10
sd(apply(matrix(rnorm(nosim * n), nosim), 1, mean))
1 / sqrt(n)
sd(apply(matrix(runif(nosim * n), nosim), 1, mean))
1 / sqrt(12 * n)
sd(apply(matrix(rpois(nosim * n, 4), nosim), 1, mean))
2 / sqrt(n)
sd(apply(matrix(sample(0:1, nosim * n, replace = TRUE), nosim), 1, mean))
sd(apply(matrix(sample(0:1, nosim * n, replace = TRUE), nosim), 1, mean))
1/ (2 * sqrt(n))
library(UsingR); data(father.son)
x <- father.son$sheight
n <- length
round(c(var(x), var(x) / n, sd(x), sd(x) / sqrt(n)), 2)
x <- father.son$sheight
n <- length
round(c(var(x), var(x) / n, sd(x), sd(x) / sqrt(n)), 2)
n <- length(x)
round(c(var(x), var(x) / n, sd(x), sd(x) / sqrt(n)), 2)
16*.2+64*.8+8+6.4
sqrt(68.8)
-4*.2
-4*.2+8*.1
-4^2*.2+.8
(-4)^2*.2+.8
p <- c(.1, .2, .3, .4)
p <- c(.1, .2, .3, .4)
x <- 2:5
p * x
sum(p * x)
sum(p*x^2) + sum(p * x)^2
sum(p*x^2) - sum(p * x)^2
unif(10,5)
unif(10)
runif(10, 5)
1:6
1:6 * 1/6
sum(1:6 * 1/6)
((1:6)^2 * 1/6)
e <- sum(1:6 * 1/6)
e
e2 <- ((1:6)^2 * 1/6)
e2 <- sum((1:6)^2 * 1/6)
e2
e2 - e^2
stdv <- sd(1:6)
stdv <- (1:6 - 3.5)^2/10)
stdv <- (1:6 - 3.5)^2/10))
stdv <- (1:6 - 3.5)^2 / 10)
stdv <- (1:6 - 3.5)^2 / 10
stdv
stdv <- sum ((1:6 - 3.5)^2 / 10)
stdv
stdv <- sum((1:6 - 3.5)^2) / 10
var(1:6)
var(1:6)/10
e <- sum(1:6 * 1/6)
e2 <- sum((1:6)^2 * 1/6)
e2 - e^2
e
e2
e2 - e^2
variance <- e2 - e^2
sterr <- variance / sqrt(10)
sterr
sterr <- variance / 10
sterr
?binom.test()
means <- cumsum(rnorm(n))/(1:n)
n <- 10000
means <- cumsum(rnorm(n))/(1:n)
library(ggplot2)
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
n <- 10000
means <- cumsum(rnorm(n))/(1:n)
library(ggplot2)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(rnorm(n))/(1:n)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(rnorm(n))/(1:n)
g
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(rnorm(n))/(1:n)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means
rnorm(n))/(1:n)
means <- cumsum(rnorm(n))/(1:n)
library(ggplot2)
means <- cumsum(rnorm(n))/(1:n)
cumsum(rnorm(n))
cumsum(rnorm(n))
library(swirl)
swirl()
dice_sqr
dice_fair
ex2_fair <- sum(dice_fair * dice_sqr)
ex2_fair - 3.5^2
edh
sum(dice_high * dice_sqr) - edh ^ 2
sd(apply, matrix(rnorm(10000), 1000), 1, mean)
sd(apply(matrix(rnorm(10000), 1000), 1, mean)
)
matrix(rnorm(10000), 1000)
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000), 1000), 1, mean)
)
info
2/sqrt(10)
sd(apply(matrix(rpois(10000, 4), 1000), 1, mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1, 10000, TRUE), 1000), 1, mean))
library(swirl)
swirl()
0.2048
0.94
0.94208
pbinom(2, 5, .8, lower.tail = FALSE)
qnorm(.1)
0
qnorm(.975, 3, 2)
3 + 2 * 1.96
pnorm(1200, 1020, 50)
pnorm(1200, 1020, 50, lower.tail = FALSE)
(1200 - 1020)/ 5''
(1200 - 1020)/ 50
pnorm((1200 - 1020)/ 50, lower.tail = FALSE)
qnorm(.75, 1020, 50)
.53
.53
ppois(3, lambda = 2.4 * 4)
ppois(3, lambda = 2.5 * 4)
ppois(5, lambda = 1000 * .1)
ppois(5, lambda = 1000 * .01)
pbinom(5, 1000, .01)
ppois(4, 1000 * .01)
ppois(5, 1000 * .01)
coinPlot(n = 10)
coinPlot(n = 10000)
qnorm(.95)
.6 + c(-1,1) qnorm(.975)*1/10
.6 + c(-1,1) * qnorm(.975)* 1 / 10
.6 + c(-1,1) * qnorm(.975) * sqrt(.6*.4/100)
x$conf.int
binom.test(60, 100)$conf.INT
binom.test(60, 100)$conf.int
mywald(.2)
ACCompar(20)
LAMB <- 5/94.32
lamb <- 5/94.32
lamb + c(-1, 1) * qnorm(.975) * sqrt(lamb/t)
lamb + c(-1, 1) * qnorm(.975) * sqrt(lamb/94.32)
poisson.test(5, 94.32)
poisson.test(5, 94.32)$conf
pnorm(70, 80, 10)
qnorm(.95, 1100, 75)
qnorm(.95, 1100, 75/10)
pbinom(5, 5, 1/2) + pbinom(4, 5, 1/2)
pbinom(4, 5, 1/2, lower.tail = FALSE)
pnorm(16, 15, 0.1) - pnorm(14, 15, 0.1)
pnorm(16, 15, 0.1)
pnorm(16, 15, 1)
pnorm(16, 15, 1) - pnorm(14, 15, 1)
ppois(10, 15)
pbinom(3, 4, 1/2, lower.tail = FALSE)
pbinom(3, 5, 1/2, lower.tail = FALSE)
pbinom(4, 5, 1/2, lower.tail = FALSE)
pbinom(3, 5, 1/2, lower.tail = FALSE)
pbinom(3, 5, 1/2, lower.tail = FALSE) + pbinom(3, 5, 1/2)
pbinom(3, 5, 1/2, lower.tail = FALSE)
ln(e)
log(e)
pi
e
ep
exp(1)
log(2^6*4^8) - 34
79*log(8) - 21 - log(2)
40*log(8)-21-1/2*ln(8)
40*log(8)-21-1/2*log(8)
40*log(8)-21-1/2*log(2)
40*log(8)-21-3/2*log(2)
12 * log(2) -2
8 * log(2) -2
swirl()
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot(2)
myplot2(2)
qt(.975, df = 2)
myplot(20)
myplot2(20)
sleep
range(g1)
range(2)
range(g2)
difference <- g1 - g2
difference <- g2 - g1
meand(difference)
mean(difference)
s <- se(difference)
s <- sd(difference)
mn + c(1, -1) * qt(.975, n-1) * s /sqrt(10)
mn + c(1, -1) * qt(.975, 10-1) * s /sqrt(10)
mn + c(1, -1) * qt(.975, 9) * s /sqrt(10)
mn + c(-1, 1) * qt(.975, 9) * s /sqrt(10)
t.test()
t.test(g1, g2)
t.test(difference)$conf.int
sp <- (8-1)*15.34^2+(21-1)*18.23^2
ns <- (8 + 21 - 2)
sp <- sqrt(sp/ns)
21 - 8 + c(-1, 1) * sp * sqrt(1/21 + 1/8)
(132.86 - 127.44) + c(-1, 1) * sp * sqrt(1/21 + 1/8)
(132.86 - 127.44) + c(-1, 1) * qt(.975, ns) * sp * sqrt(1/21 + 1/8)
132.86 - 127.44 + c(-1, 1) * qt(.975, ns) * sp * sqrt(1/21 + 1/8)
132.86 - 127.44 + c(-1, 1) * qt(.975, ns) * sp * sqrt(1/8 + 1/21)
sp <- sqrt(((10-1)*var(g1)+(10-1)*var(g2))/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md
md + c(-1, 1) * qt(.975, 18) * sp * sqrt(1/5)
t.test(g2, g1, var.equal = FALSE)$conf
t.test(g2, g1, paired = FALSE, var.equal = FALSE)$conf
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE)$conf
num <- (15.34/8 + 18.23/21)^2
num <- (15.34^2/8 + 18.23^2/21)^2
den <- (15.34^4/8^2)/7 + (18.23^4/21^2)/20
mydf <- num/den
132.86-127.44 + c(-1, 1) * qt(.975, mydf) * sqrt(15.34^2/8 + 18.23^2/21)
10/10
(32-30)/1
(32-30)/10/sqrt(16)
(32-30)/(10/sqrt(16))
15
qt(.95, 15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$gheight)/sqrt(1078)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
mybin[7]
mybin[7] and mybin[8]
mybin[7]=.144 and mybin[8].034
mybin[7]=.144
mybin[7]
mybin[7] && mybin[8]
mybin[7] and mybin[8]
mybin[7] + mybin[8]
8
pt(q=2.5, df = 15, lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(7, lower.tail = TRUE)
pbinom(7, 8, .5, lower.tail = TRUE)
ppois(9, lambda = 9, lower.tail = FALSE)
ppois(9, lambda = 5, lower.tail = FALSE)
1100 + c(-1, 1) * qt(.95) * 30/3
1100 + c(-1, 1) * qt(.95, 8) * 30/3
?confint
1100 + c(-1, 1) * qnorm(.95) * 30/3
1100 + c(-1, 1) * qt(.95, 8) * 30/3
6/qt(.95, 8)
6/qt(.05, 8)
6/qt(.95, 8)
6/qt(.95, 7)
6/qt(.95, 8)
2/qt(.95,8)
2/qt(.975,8)
6/qt(.975,8)
x0 <- 3
n0 <- n1 <- 10
s0 <- 0.6
x1 <- 5
s1 <- 0.68
v0 <- 0.6
v1 <- 0.68
sp <- ((n0-1)*v0+(n1-1)*v1)/(n1+n2-2)
sqrt(sp)
sp <- sqrt(sp)
x0-x1 + c(-1, 1) * qt(.975, 18) * sp * sqrt(2/10)
se <- sqrt(s0^2/s0+s1^2/s1)
x1-x0 / sp
z <- x1-x0 / sp
pnorm(z)
z <- x9-x1 / sp
z <- x0-x1 / sp
pnorm(z)
x0-x1 + c(-1, 1) * pnorm(.975) * se
x0-x1 + c(-1, 1) * qnorm(.975) * se
x0 <- 6
x1 <- 4
n0 <- n1 <- 100
s0 <- 0.5
s1 <- 2
se <- sqrt(s0^2/s0+s1^2/s1)
z <- x0-x1 / sp
pnorm(z)
x0-x1 + c(-1, 1) * qnorm(.975) * se
z <- x0-x1 / sp
pnorm(z)
x0 <- 1
x1 <- -3
n0 <- n1 <- 9
v0 <- 1.8
v1 <- 1.5
s0 <- 1.8
s1 <- 1.5
sp <- ((n0-1)*s0^2+(n1-1)*s1^2)/(n1+n2-2)
sp <- sqrt(sp)
x0 <- 1
x1 <- -3
n0 <- n1 <- 9
s0 <- 1.8
s1 <- 1.5
sp <- ((n0-1)*s0^2+(n1-1)*s1^2)/(n1+n2-2)
sp <- sqrt(sp)
x1-x0 + c(-1, 1) * qt(.95, 7) * sp * sqrt(2/9)
x1-x0 + c(-1, 1) * qt(.95, 16) * sp * sqrt(2/9)
x0 <- 1
x1 <- -3
n0 <- n1 <- 9
s0 <- 1.8
s1 <- 1.5
sp <- ((n0-1)*s0^2+(n1-1)*s1^2)/(n1+n2-2)
sp <- sqrt(sp)
x1-x0 + c(-1, 1) * qt(.95, 16) * sp * sqrt(2/9)
x1-x0 + c(-1, 1) * qt(.95, 16) * sp * sqrt(2/9)
n1 <- n2 <- 9
x1 <- -3 ##treated
x2 <- 1 ##placebo
s1 <- 1.5 ##treated
s2 <- 1.8 ##placebo
s <- sqrt(((n1 - 1) * s1^2 + (n2 - 1) * s2^2)/(n1 + n2 - 2))
(x1 - x2) + c(-1, 1) * qt(0.95, n1 + n2 - 2) * s * sqrt(1/n1 + 1/n2)
x0 <- 1
x1 <- -3
n0 <- n1 <- 9
s0 <- 1.8
s1 <- 1.5
sp <- ((n0-1)*s0^2+(n1-1)*s1^2)/(n1+n2-2)
sp <- sqrt(sp)
x1-x0 + c(-1, 1) * qt(.95, 16) * sp * sqrt(2/9)
n <- 9
x <- 1100
sd <- 30
se <- sqrt(30/n)
n <- 9
x <- 1100
sd <- 30
se <- sqrt(30/n)
x + c(-1, 1) * qt(.975, 8) * se
n <- 9
x <- 1100
sd <- 30
se <- sqrt(30/n)
x + c(-1, 1) * qt(.975, 8) * se
n <- 9
x <- 1100
sd <- 30
se <- 30/sqrt(n)
x + c(-1, 1) * qt(.975, 8) * se
x0 <- 6
x1 <- 4
n0 <- n1 <- 100
s0 <- 2
s1 <- 0.5
se <- sqrt(s0^2/s0+s1^2/s1)
z <- x0-x1 / sp
pnorm(z)
x0-x1 + c(-1, 1) * qnorm(.975) * se
x0 <- 6
x1 <- 4
n0 <- n1 <- 100
s0 <- 2
s1 <- 0.5
se <- sqrt(s0^2/s0+s1^2/s1)
z <- x0-x1 / sp
pnorm(z)
x0-x1 + c(-1, 1) * qnorm(.975) * se
x0 <- 6
x1 <- 4
n0 <- n1 <- 100
s0 <- 2
s1 <- 0.5
se <- sqrt(s0^2/n0+s1^2/n1)
z <- x0-x1 / sp
pnorm(z)
x0-x1 + c(-1, 1) * qnorm(.975) * se
library(DataEntry)
install.packages(DataEntry)
install.packages("DataEntry")
dataentry()
library(DataEntry)
library(DataEntry)
DataEntry()
setwd("./Escritorio/PsicoEstadistica/UCC/practicos/")
dir()
